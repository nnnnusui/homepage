@use "variable" as *;
@use "reset";
@use "base";
@use "coloring";
@use "font";

header {
  max-width: calc(var(--max-width) - 1.5rem * 2);
  height: 3rem;
  padding: 0 var(--min-padding);
  margin: 0 auto;
  nav li:not(:first-of-type):before {
    margin: 0 0.15rem;
    content: "> ";
  }
}
footer {
  height: 5rem;
  margin: 0 auto;
}
main {
  max-width: calc(var(--max-width) - 4rem * 2);
  padding: 0 var(--min-padding);
  margin: 0 auto;
  > section {
    margin-top: 1.75rem;
    margin-left: unset;
  }
}

ul {
  margin-left: 1rem;
  list-style-type: none;
  p {
    margin-bottom: unset;
    line-height: unset;
    text-indent: unset;
  }
  section {
    margin: unset;
  }
  ul {
    margin-left: unset;
  }
  li {
    position: relative;
    display: list-item;
    margin-bottom: 0.45rem;
    margin-left: 2rem;
    &::before {
      position: absolute;
      top: 0.55rem;
      display: block;
      width: 0.4rem;
      height: 0.4rem;
      margin-left: -1rem;
      content: "";
      transform: rotate(45deg);
    }
  }
}

p {
  margin-bottom: 0.28rem;
  line-height: 1.55rem;
  text-indent: 0.75rem;
}

section {
  margin-top: 1.4rem;
  margin-left: 0.55rem;
  &:last-of-type:not(.list, .code) {
    margin-bottom: 3rem;
  }
  h1 + section {
    margin-top: 0;
  }
  $padding: 0.45rem;
  > .list,
  > .code {
    position: relative;
    padding-top: $padding + 0.2rem;
    padding-right: $padding;
    padding-bottom: 0.1rem;
    padding-left: $padding;
    margin-top: 1.75rem;
    margin-bottom: 0.75rem;
    > h1 {
      position: absolute;
      top: -1rem;
      padding: 0.01rem 0.25rem;
    }
    ul {
      margin: unset;
    }
  }
  > .list {
    border-color: $main-color;
    border-style: solid;
    border-width: 1px;
    > h1 {
      border-color: $main-color;
      border-style: solid;
      border-width: 1px;
    }
  }
}

// // stylelint-disable property-no-unknown
// @counter-style test {
//   system: fixed;
//   symbols: "\A";
//   suffix: " ";
// }

section {
  // border-left: 0.2rem solid;
  // list-style: test;
  h1 {
    // background-color: black;
    // position: sticky;
    top: 0;
  }
  > section {
    &:first-of-type {
      counter-reset: section;
    }
    &:not(.list, .code) {
      > h1 {
        // display: list-item;
        &::before {
          font-size: 1.2rem;
          content: counters(section, "-") ". ";
          counter-increment: section;
        }
      }
    }
  }
}
